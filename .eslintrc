{
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended-type-checked",
		"plugin:@typescript-eslint/stylistic-type-checked",
		"next/core-web-vitals",
		"prettier"
	],
	"plugins": ["testing-library", "@typescript-eslint", "react"],
	"rules": {
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": "default",
				"format": ["strictCamelCase"]
			},

			{
				"selector": "variableLike",
				"format": ["strictCamelCase"]
			},
			{
				"selector": "variable",
				"modifiers": ["global", "const"],
				"format": ["UPPER_CASE"]
			},
			{
				"selector": "variable",
				"modifiers": ["global", "const"],
				"types": ["function"],
				"format": ["strictCamelCase"]
			},
			{
				"selector": "parameter",
				"format": ["strictCamelCase"],
				"leadingUnderscore": "allow"
			},
			{
				"selector": "function",
				"format": ["UPPER_CASE"],
				"filter": "^(?:GET|POST)$"
			},

			{
				"selector": "objectLiteralProperty",
				"filter": "^--",
				"format": null
			},

			{
				"selector": "typeLike",
				"format": ["StrictPascalCase"]
			},
			{
				"selector": "typeParameter",
				"format": ["StrictPascalCase"],
				"prefix": ["T"]
			},

			{
				"selector": "import",
				"format": ["strictCamelCase", "UPPER_CASE"]
			}
		]
	},
	"overrides": [
		// Only uses Testing Library lint rules in test files
		{
			"files": [
				"**/__tests__/**/*.[jt]s?(x)",
				"**/?(*.)+(spec|test).[jt]s?(x)"
			],
			"extends": ["plugin:testing-library/react"]
		},
		// Overwrite next config to enable type checked linting
		{
			"files": ["**/*.ts?(x)"],
			"parser": "@typescript-eslint/parser",
			"parserOptions": {
				"sourceType": "module",
				"project": true,
				"tsconfigRootDir": "__dirname",
				"ecmaFeatures": {
					"jsx": true
				},
				"warnOnUnsupportedTypeScriptVersion": true
			}
		},
		// Allow Pascal functions in jsx files
		{
			"files": ["**/*.[jt]sx"],
			"rules": {
				"@typescript-eslint/naming-convention": [
					"warn",
					{
						"selector": "default",
						"format": ["strictCamelCase"]
					},

					{
						"selector": "variableLike",
						"format": ["strictCamelCase"]
					},
					{
						"selector": "variable",
						"modifiers": ["global", "const"],
						"format": ["UPPER_CASE"]
					},
					{
						"selector": "variable",
						"modifiers": ["global", "const"],
						"types": ["function"],
						"format": ["strictCamelCase", "StrictPascalCase"]
					},
					{
						"selector": "parameter",
						"format": ["strictCamelCase"],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "function",
						"format": ["strictCamelCase", "StrictPascalCase"]
					},
					{
						"selector": "function",
						"format": ["UPPER_CASE"],
						"filter": "^(?:GET|POST)$"
					},

					{
						"selector": "objectLiteralProperty",
						"filter": "^--",
						"format": null
					},

					{
						"selector": "typeLike",
						"format": ["StrictPascalCase"]
					},
					{
						"selector": "typeParameter",
						"format": ["StrictPascalCase"],
						"prefix": ["T"]
					},

					{
						"selector": "import",
						"format": ["strictCamelCase", "StrictPascalCase", "UPPER_CASE"]
					}
				]
			}
		}
	]
}
